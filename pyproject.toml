[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "tinypng-cli"
version = "1.0.0"
description = "智能图片压缩工具 - 支持 PNG, JPEG, WebP 等格式"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "TinyPNG CLI Team", email = "support@tinypng-cli.com"}
]
keywords = ["image", "compression", "png", "jpeg", "webp", "cli", "tool"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Graphics",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
]
requires-python = ">=3.7"
dependencies = [
    "Pillow>=10.0.0",
    "click>=8.1.0",
    "tqdm>=4.65.0",
    "colorama>=0.4.6",
    "piexif>=1.1.3",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]
build = [
    "pyinstaller>=5.0.0",
    "setuptools>=61.0",
    "wheel>=0.37.0",
]

[project.scripts]
tinypng = "tinypng_cli:main"

[project.urls]
Homepage = "https://github.com/yourusername/tinypng-cli"
Documentation = "https://github.com/yourusername/tinypng-cli#readme"
Repository = "https://github.com/yourusername/tinypng-cli.git"
Issues = "https://github.com/yourusername/tinypng-cli/issues"

[tool.setuptools]
packages = ["tinypng_cli"]

[tool.black]
line-length = 88
target-version = ['py37']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.7"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
